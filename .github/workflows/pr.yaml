on: pull_request

name: Review

env:
  COMPOSE_USER: runner

jobs:
  test-composer-install:
    runs-on: ubuntu-latest
    name: Validate composer
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker network create frontend
          docker compose run --rm phpfpm composer validate composer.json --strict
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm composer normalize --dry-run
          docker compose run --rm phpfpm composer audit

  validate-doctrine-schema:
    runs-on: ubuntu-latest
    name: Validate Doctrine Schema
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker network create frontend
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm bin/console doctrine:migrations:migrate --no-interaction
          docker compose run --rm phpfpm bin/console doctrine:schema:validate

  validate-doctrine-fixtures:
    runs-on: ubuntu-latest
    name: Validate Doctrine Fixtures
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker network create frontend
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm bin/console doctrine:migrations:migrate --no-interaction
          docker compose run --rm phpfpm bin/console doctrine:fixtures:load --no-interaction

  test-suite:
    if: false # Currently the project has no tests
    name: Test suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Test suite
        run: |
          docker network create frontend
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm vendor/bin/phpunit --coverage-clover=coverage/unit.xml

      - name: Upload coverage to Codecov test
        uses: codecov/codecov-action@v2
        with:
          files: ./coverage/unit.xml
          flags: unittests, ${{ matrix.php }}

  changelog:
    runs-on: ubuntu-latest
    name: Changelog should be updated
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Git fetch
        run: git fetch

      - name: Check that changelog has been updated.
        run: git diff --exit-code origin/${{ github.base_ref }} -- CHANGELOG.md && exit 1 || exit 0

  markdown-coding-standards:
    name: Markdown coding standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Coding standards
        run: |
          docker run --rm --volume "$PWD:/md" itkdev/markdownlint '**/*.md'

  coding-standards-phpcs:
    name: coding-standards-check/phpcs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker network create frontend
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm composer coding-standards-check

  coding-standards-twig-cs-fixer:
    name: coding-standards-check/twig-cs-fixer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker network create frontend
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm composer coding-standards-check/twig-cs-fixer

  code-analysis:
    name: PHP - Code analysis (phpstan)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker network create frontend
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm composer code-analysis

  apispec:
    name: PHP - Code analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker network create frontend
          docker compose run --rm phpfpm composer install
          docker compose run --rm phpfpm bin/console api:openapi:export --yaml --output=public/spec.yaml --no-interaction
          git diff --diff-filter=ACMRT --exit-code public/spec.yaml
